apply plugin: 'java'

dependencies {
	compile('uk.ac.ebi.subs:subs-messaging:0.3.0-SNAPSHOT')
	compile project(':subs-ena-agent-common')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("junit:junit")
}

task('externalCiTest', type: Test) {
    useJUnit {
        excludeCategories 'uk.ac.ebi.subs.validator.tester.RabbitMQDependentTest'
    }
    testLogging {
        exceptionFormat = 'full'
    }
}

bootRepackage {
    mainClass = "uk.ac.ebi.subs.ena.EnaAgentApplication"
}
springBoot {
    executable = true
}

remotes {
    submission_dev {
        role('test')
        host = 'mac-subs-003'
    }
    submission_test {
        role('dev')
        host = 'mac-subs-004'
    }
}


task deployJar(type: SshTask, dependsOn: 'assemble') {
    doLast {
        File jarDeployDir = new File("/data/$gradle_env/$project.name/jar")
        sshRun(jarDeployDir)
    }
    ssh.settings {
        knownHosts = allowAnyHosts
    }
}

private Object sshRun(File jarDeployDir) {
    ssh.run {
        session(remotes.role(gradle_env)) {
            execute "/homes/sub_adm/create_dirs.sh $gradle_env $project.name", ignoreError: false
            println "Uploading jar $jar.archivePath.name to $jarDeployDir area on $remote"
            put(jar.archivePath.absolutePath, jarDeployDir.absolutePath)
            println "creating symbolic link to $jar.archiveName"
            def result = execute "ln -s -f $jarDeployDir/$jar.archiveName $jarDeployDir/$jar.baseName" + ".jar", ignoreError: true
            println result
            println "updating permissions of $jarDeployDir/$jar.archiveName"
            execute "chmod u+x $jarDeployDir/*", ignoreError: false
        }
    }
}